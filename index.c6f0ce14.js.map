{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        // eslint-disable-next-line no-console\n        this.score = 0;\n        this.status = \"idle\";\n        this.initialState = initialState ? initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        }) : Array.from({\n            length: 4\n        }, function() {\n            return Array(4).fill(0);\n        });\n        this.board = this.initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                var oldBoard = this.getState();\n                this.board.forEach(function(row, i) {\n                    var newRow = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var j = 0; j < newRow.length - 1; j++)if (newRow[j] === newRow[j + 1]) {\n                        newRow[j] = newRow[j] * 2;\n                        _this.score += newRow[j];\n                        newRow[j + 1] = 0;\n                        j++;\n                    }\n                    _this.board[i] = newRow.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(_this.board[i].length < 4)_this.board[i].push(0);\n                });\n                this.chechGameOver();\n                if (!this.boardsAreEqual(oldBoard, this.board)) this.addRandomTile();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                var oldBoard = this.getState();\n                this.board.forEach(function(row, i) {\n                    var newRow = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var j = newRow.length - 1; j > 0; j--)if (newRow[j] === newRow[j - 1]) {\n                        newRow[j] = newRow[j] * 2;\n                        _this.score += newRow[j];\n                        newRow[j - 1] = 0;\n                        j--;\n                    }\n                    _this.board[i] = newRow.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(_this.board[i].length < 4)_this.board[i].unshift(0);\n                });\n                this.chechGameOver();\n                if (!this.boardsAreEqual(oldBoard, this.board)) this.addRandomTile();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this, _loop = function(i) {\n                    var col = [];\n                    for(var j = 0; j < 4; j++)col.push(_this.board[j][i]);\n                    var newCol = col.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var j1 = 0; j1 < newCol.length - 1; j1++)if (newCol[j1] === newCol[j1 + 1]) {\n                        newCol[j1] = newCol[j1] * 2;\n                        _this.score += newCol[j1];\n                        newCol[j1 + 1] = 0;\n                        j1++;\n                    }\n                    newCol = newCol.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(newCol.length < 4)newCol.push(0);\n                    for(var j2 = 0; j2 < 4; j2++)_this.board[j2][i] = newCol[j2];\n                };\n                var oldBoard = this.getState();\n                for(var i = 0; i < 4; i++)_loop(i);\n                this.chechGameOver();\n                if (!this.boardsAreEqual(oldBoard, this.board)) this.addRandomTile();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this, _loop = function(i) {\n                    var col = [];\n                    for(var j = 0; j < 4; j++)col.push(_this.board[j][i]);\n                    var newCol = col.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    for(var j1 = newCol.length - 1; j1 > 0; j1--)if (newCol[j1] === newCol[j1 - 1]) {\n                        newCol[j1] = newCol[j1] * 2;\n                        _this.score += newCol[j1];\n                        newCol[j1 - 1] = 0;\n                        j1--;\n                    }\n                    newCol = newCol.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    while(newCol.length < 4)newCol.unshift(0);\n                    for(var j2 = 0; j2 < 4; j2++)_this.board[j2][i] = newCol[j2];\n                };\n                var oldBoard = this.getState();\n                for(var i = 0; i < 4; i++)_loop(i);\n                this.chechGameOver();\n                if (!this.boardsAreEqual(oldBoard, this.board)) this.addRandomTile();\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.score = 0;\n                this.board = Array.from({\n                    length: 4\n                }, function() {\n                    return Array(4).fill(0);\n                });\n                this.status = \"playing\";\n                this.addRandomTile();\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.board = this.initialState.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        },\n        {\n            // Add your own methods here\n            key: \"boardsAreEqual\",\n            value: function boardsAreEqual(board1, board2) {\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n                    if (board1[i][j] !== board2[i][j]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var mas = this.getRandomTile();\n                var numberRandom = Math.floor(Math.random() * mas.length);\n                var number = Math.random() < 0.9 ? 2 : 4;\n                this.board[mas[numberRandom].i][mas[numberRandom].j] = number;\n            }\n        },\n        {\n            key: \"getRandomTile\",\n            value: function getRandomTile() {\n                var masEmpty = [];\n                for(var i = 0; i < 4; i++){\n                    for(var j = 0; j < 4; j++)if (this.board[i][j] === 0) masEmpty.push({\n                        i: i,\n                        j: j\n                    });\n                }\n                return masEmpty;\n            }\n        },\n        {\n            key: \"chechGameOver\",\n            value: function chechGameOver() {\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n                    if (this.board[i][j] === 2048) {\n                        this.status = \"win\";\n                        return;\n                    }\n                    if (this.board[i][j] === 0) return;\n                    if (i < 3 && this.board[i][j] === this.board[i + 1][j]) return;\n                    if (j < 3 && this.board[i][j] === this.board[i][j + 1]) return;\n                }\n                this.status = \"lose\";\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$gameScore = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$buttonStart = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$tilesContainer = document.querySelector(\".tiles-container\");\nvar $197cd56b15c33885$var$tilesMap = {};\nfunction $197cd56b15c33885$var$showMessage(message) {\n    switch(message){\n        case \"lose\":\n            $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n            break;\n        case \"win\":\n            $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n            break;\n        default:\n    }\n}\nfunction $197cd56b15c33885$var$updateScore(score) {\n    $197cd56b15c33885$var$gameScore.textContent = score;\n}\nfunction $197cd56b15c33885$var$updateBoard(board) {\n    var newTilesMap = {};\n    board.forEach(function(row, y) {\n        row.forEach(function(value, x) {\n            var key = \"\".concat(x, \"-\").concat(y);\n            if (value === 0) {\n                if ($197cd56b15c33885$var$tilesMap[key]) $197cd56b15c33885$var$tilesContainer.removeChild($197cd56b15c33885$var$tilesMap[key]);\n                return;\n            }\n            if ($197cd56b15c33885$var$tilesMap[key]) {\n                $197cd56b15c33885$var$tilesMap[key].style.transition = \"transform 1.15s ease-in-out\";\n                $197cd56b15c33885$var$tilesMap[key].textContent = value;\n                $197cd56b15c33885$var$tilesMap[key].className = \"tile tile--\".concat(value);\n                $197cd56b15c33885$var$tilesMap[key].style.transform = \"translate(\".concat(x * 90, \"px, \").concat(y * 90, \"px) scale(1)\");\n                newTilesMap[key] = $197cd56b15c33885$var$tilesMap[key];\n            } else {\n                var tile = document.createElement(\"div\");\n                tile.classList.add(\"tile\", \"tile--\".concat(value));\n                tile.textContent = value;\n                tile.style.transform = \"translate(\".concat(x * 90, \"px, \").concat(y * 90, \"px) scale(0.5)\");\n                $197cd56b15c33885$var$tilesContainer.appendChild(tile);\n                requestAnimationFrame(function() {\n                    tile.style.transition = \"transform 0.25s ease-in-out\";\n                    tile.style.transform = \"translate(\".concat(x * 90, \"px, \").concat(y * 90, \"px) scale(1)\");\n                });\n                newTilesMap[key] = tile;\n            }\n        });\n    });\n    $197cd56b15c33885$var$updateScore($197cd56b15c33885$var$game.getScore());\n    $197cd56b15c33885$var$tilesMap = newTilesMap;\n}\n$197cd56b15c33885$var$buttonStart.addEventListener(\"click\", function(e) {\n    if (!$197cd56b15c33885$var$game || $197cd56b15c33885$var$game.getStatus() !== \"playing\") {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$buttonStart.textContent = \"Restart\";\n        $197cd56b15c33885$var$buttonStart.className = \"button restart\";\n    } else {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$buttonStart.textContent = \"Start\";\n        $197cd56b15c33885$var$buttonStart.className = \"button start\";\n    }\n    $197cd56b15c33885$var$updateBoard($197cd56b15c33885$var$game.getState());\n    $197cd56b15c33885$var$updateScore($197cd56b15c33885$var$game.getScore());\n    $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") // eslint-disable-next-line no-useless-return\n    return;\n    switch(e.key){\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            break;\n        default:\n    }\n    $197cd56b15c33885$var$updateBoard($197cd56b15c33885$var$game.getState());\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n    $197cd56b15c33885$var$showMessage($197cd56b15c33885$var$game.getStatus());\n});\n// Write your code here\nvar $197cd56b15c33885$var$themeSwitch = document.getElementById(\"switch\");\n$197cd56b15c33885$var$themeSwitch.addEventListener(\"change\", function() {\n    document.body.classList.toggle(\"dark\", $197cd56b15c33885$var$themeSwitch.checked);\n    document.querySelectorAll(\"p\").forEach(function(p) {\n        p.style.color = $197cd56b15c33885$var$themeSwitch.checked ? \"#fff\" : \"#333\";\n    });\n    document.querySelector(\".dark-check--p\").textContent = $197cd56b15c33885$var$themeSwitch.checked ? \"DARK\" : \"LIGHT\";\n});\nvar $197cd56b15c33885$var$startX = 0;\nvar $197cd56b15c33885$var$startY = 0;\nvar $197cd56b15c33885$var$gameContainer = document.querySelector(\".game-container\");\n$197cd56b15c33885$var$gameContainer.addEventListener(\"touchstart\", function(e) {\n    e.preventDefault();\n    var touch = e.touches[0];\n    $197cd56b15c33885$var$startX = touch.clientX;\n    $197cd56b15c33885$var$startY = touch.clientY;\n}, {\n    passive: false\n});\n$197cd56b15c33885$var$gameContainer.addEventListener(\"touchend\", function(e) {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    var touch = e.changedTouches[0];\n    var diffX = touch.clientX - $197cd56b15c33885$var$startX;\n    var diffY = touch.clientY - $197cd56b15c33885$var$startY;\n    if (Math.abs(diffX) > Math.abs(diffY)) {\n        if (diffX > 0) $197cd56b15c33885$var$game.moveRight();\n        else $197cd56b15c33885$var$game.moveLeft();\n    } else if (Math.abs(diffY) > 0) {\n        if (diffY > 0) $197cd56b15c33885$var$game.moveDown();\n        else $197cd56b15c33885$var$game.moveUp();\n    }\n    $197cd56b15c33885$var$updateBoard($197cd56b15c33885$var$game.getState());\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n    $197cd56b15c33885$var$showMessage($197cd56b15c33885$var$game.getStatus());\n}, {\n    passive: false\n});\n\n})();\n//# sourceMappingURL=index.c6f0ce14.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\n\nconst game = new Game();\n\nconst gameScore = document.querySelector('.game-score');\nconst buttonStart = document.querySelector('.button');\n\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\n\nconst tilesContainer = document.querySelector('.tiles-container');\nlet tilesMap = {};\n\nfunction showMessage(message) {\n  switch (message) {\n    case 'lose':\n      messageLose.classList.remove('hidden');\n      break;\n    case `win`:\n      messageWin.classList.remove('hidden');\n      break;\n    default:\n  }\n}\n\nfunction updateScore(score) {\n  gameScore.textContent = score;\n}\n\nfunction updateBoard(board) {\n  const newTilesMap = {};\n\n  board.forEach((row, y) => {\n    row.forEach((value, x) => {\n      const key = `${x}-${y}`;\n\n      if (value === 0) {\n        if (tilesMap[key]) {\n          tilesContainer.removeChild(tilesMap[key]);\n        }\n\n        return;\n      }\n\n      if (tilesMap[key]) {\n        tilesMap[key].style.transition = 'transform 1.15s ease-in-out';\n        tilesMap[key].textContent = value;\n        tilesMap[key].className = `tile tile--${value}`;\n\n        tilesMap[key].style.transform =\n          `translate(${x * 90}px, ${y * 90}px) scale(1)`;\n        newTilesMap[key] = tilesMap[key];\n      } else {\n        const tile = document.createElement('div');\n\n        tile.classList.add('tile', `tile--${value}`);\n        tile.textContent = value;\n        tile.style.transform = `translate(${x * 90}px, ${y * 90}px) scale(0.5)`;\n        tilesContainer.appendChild(tile);\n\n        requestAnimationFrame(() => {\n          tile.style.transition = 'transform 0.25s ease-in-out';\n          tile.style.transform = `translate(${x * 90}px, ${y * 90}px) scale(1)`;\n        });\n\n        newTilesMap[key] = tile;\n      }\n    });\n  });\n  updateScore(game.getScore());\n  tilesMap = newTilesMap;\n}\n\nbuttonStart.addEventListener('click', (e) => {\n  if (!game || game.getStatus() !== 'playing') {\n    game.start();\n    buttonStart.textContent = 'Restart';\n    buttonStart.className = 'button restart';\n  } else {\n    game.restart();\n    buttonStart.textContent = 'Start';\n    buttonStart.className = 'button start';\n  }\n  updateBoard(game.getState());\n  updateScore(game.getScore());\n  messageStart.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n});\n\ndocument.addEventListener('keydown', (e) => {\n  if (game.getStatus() !== 'playing') {\n    // eslint-disable-next-line no-useless-return\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowUp':\n      game.moveUp();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      break;\n    default:\n  }\n\n  updateBoard(game.getState());\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  showMessage(game.getStatus());\n});\n// Write your code here\n\nconst themeSwitch = document.getElementById('switch');\n\nthemeSwitch.addEventListener('change', () => {\n  document.body.classList.toggle('dark', themeSwitch.checked);\n\n  document.querySelectorAll('p').forEach((p) => {\n    p.style.color = themeSwitch.checked ? '#fff' : '#333';\n  });\n\n  document.querySelector('.dark-check--p').textContent = themeSwitch.checked\n    ? 'DARK'\n    : 'LIGHT';\n});\n\nlet startX = 0;\nlet startY = 0;\n\nconst gameContainer = document.querySelector('.game-container');\n\ngameContainer.addEventListener(\n  'touchstart',\n  (e) => {\n    e.preventDefault();\n\n    const touch = e.touches[0];\n\n    startX = touch.clientX;\n    startY = touch.clientY;\n  },\n  { passive: false },\n);\n\ngameContainer.addEventListener(\n  'touchend',\n  (e) => {\n    if (game.getStatus() !== 'playing') {\n      return;\n    }\n\n    const touch = e.changedTouches[0];\n    const diffX = touch.clientX - startX;\n    const diffY = touch.clientY - startY;\n\n    if (Math.abs(diffX) > Math.abs(diffY)) {\n      if (diffX > 0) {\n        game.moveRight();\n      } else {\n        game.moveLeft();\n      }\n    } else if (Math.abs(diffY) > 0) {\n      if (diffY > 0) {\n        game.moveDown();\n      } else {\n        game.moveUp();\n      }\n    }\n\n    updateBoard(game.getState());\n    messageLose.classList.add('hidden');\n    messageWin.classList.add('hidden');\n    showMessage(game.getStatus());\n  },\n  { passive: false },\n);\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(initialState) {\n    // eslint-disable-next-line no-console\n    this.score = 0;\n    this.status = 'idle';\n\n    this.initialState = initialState\n      ? initialState.map((row) => [...row])\n      : Array.from({ length: 4 }, () => Array(4).fill(0));\n    this.board = this.initialState.map((row) => [...row]);\n  }\n\n  moveLeft() {\n    const oldBoard = this.getState();\n\n    this.board.forEach((row, i) => {\n      const newRow = row.filter((cell) => cell !== 0);\n\n      for (let j = 0; j < newRow.length - 1; j++) {\n        if (newRow[j] === newRow[j + 1]) {\n          newRow[j] = newRow[j] * 2;\n          this.score += newRow[j];\n          newRow[j + 1] = 0;\n          j++;\n        }\n      }\n\n      this.board[i] = newRow.filter((cell) => cell !== 0);\n\n      while (this.board[i].length < 4) {\n        this.board[i].push(0);\n      }\n    });\n    this.chechGameOver();\n\n    if (!this.boardsAreEqual(oldBoard, this.board)) {\n      this.addRandomTile();\n    }\n  }\n\n  moveRight() {\n    const oldBoard = this.getState();\n\n    this.board.forEach((row, i) => {\n      const newRow = row.filter((cell) => cell !== 0);\n\n      for (let j = newRow.length - 1; j > 0; j--) {\n        if (newRow[j] === newRow[j - 1]) {\n          newRow[j] = newRow[j] * 2;\n          this.score += newRow[j];\n          newRow[j - 1] = 0;\n          j--;\n        }\n      }\n      this.board[i] = newRow.filter((cell) => cell !== 0);\n\n      while (this.board[i].length < 4) {\n        this.board[i].unshift(0);\n      }\n    });\n    this.chechGameOver();\n\n    if (!this.boardsAreEqual(oldBoard, this.board)) {\n      this.addRandomTile();\n    }\n  }\n\n  moveUp() {\n    const oldBoard = this.getState();\n\n    for (let i = 0; i < 4; i++) {\n      const col = [];\n\n      for (let j = 0; j < 4; j++) {\n        col.push(this.board[j][i]);\n      }\n\n      let newCol = col.filter((cell) => cell !== 0);\n\n      for (let j = 0; j < newCol.length - 1; j++) {\n        if (newCol[j] === newCol[j + 1]) {\n          newCol[j] = newCol[j] * 2;\n          this.score += newCol[j];\n          newCol[j + 1] = 0;\n          j++;\n        }\n      }\n\n      newCol = newCol.filter((cell) => cell !== 0);\n\n      while (newCol.length < 4) {\n        newCol.push(0);\n      }\n\n      for (let j = 0; j < 4; j++) {\n        this.board[j][i] = newCol[j];\n      }\n    }\n    this.chechGameOver();\n\n    if (!this.boardsAreEqual(oldBoard, this.board)) {\n      this.addRandomTile();\n    }\n  }\n\n  moveDown() {\n    const oldBoard = this.getState();\n\n    for (let i = 0; i < 4; i++) {\n      const col = [];\n\n      for (let j = 0; j < 4; j++) {\n        col.push(this.board[j][i]);\n      }\n\n      let newCol = col.filter((cell) => cell !== 0);\n\n      for (let j = newCol.length - 1; j > 0; j--) {\n        if (newCol[j] === newCol[j - 1]) {\n          newCol[j] = newCol[j] * 2;\n          this.score += newCol[j];\n          newCol[j - 1] = 0;\n          j--;\n        }\n      }\n\n      newCol = newCol.filter((cell) => cell !== 0);\n\n      while (newCol.length < 4) {\n        newCol.unshift(0);\n      }\n\n      for (let j = 0; j < 4; j++) {\n        this.board[j][i] = newCol[j];\n      }\n    }\n    this.chechGameOver();\n\n    if (!this.boardsAreEqual(oldBoard, this.board)) {\n      this.addRandomTile();\n    }\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.board.map((row) => [...row]);\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n\n  getStatus() {\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.score = 0;\n    this.board = Array.from({ length: 4 }, () => Array(4).fill(0));\n    this.status = 'playing';\n    this.addRandomTile();\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.board = this.initialState.map((row) => [...row]);\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  // Add your own methods here\n  boardsAreEqual(board1, board2) {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (board1[i][j] !== board2[i][j]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  addRandomTile() {\n    const mas = this.getRandomTile();\n    const numberRandom = Math.floor(Math.random() * mas.length);\n    const number = Math.random() < 0.9 ? 2 : 4;\n\n    this.board[mas[numberRandom].i][mas[numberRandom].j] = number;\n  }\n\n  getRandomTile() {\n    const masEmpty = [];\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.board[i][j] === 0) {\n          masEmpty.push({ i, j });\n        }\n      }\n    }\n\n    return masEmpty;\n  }\n\n  chechGameOver() {\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.board[i][j] === 2048) {\n          this.status = 'win';\n\n          return;\n        }\n\n        if (this.board[i][j] === 0) {\n          return;\n        }\n\n        if (i < 3 && this.board[i][j] === this.board[i + 1][j]) {\n          return;\n        }\n\n        if (j < 3 && this.board[i][j] === this.board[i][j + 1]) {\n          return;\n        }\n      }\n    }\n    this.status = 'lose';\n  }\n}\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","instance","Constructor","score","status","map","row","fill","board","key","value","_this","oldBoard","getState","forEach","newRow","filter","cell","j","push","chechGameOver","boardsAreEqual","addRandomTile","unshift","_loop","col","newCol","j1","j2","board1","board2","mas","getRandomTile","numberRandom","Math","floor","random","number","masEmpty","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$gameScore","document","querySelector","$197cd56b15c33885$var$buttonStart","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$tilesContainer","$197cd56b15c33885$var$tilesMap","$197cd56b15c33885$var$showMessage","message","classList","remove","$197cd56b15c33885$var$updateScore","textContent","$197cd56b15c33885$var$updateBoard","newTilesMap","y","x","concat","removeChild","style","transition","className","transform","tile","createElement","add","appendChild","requestAnimationFrame","getScore","addEventListener","e","getStatus","restart","start","moveUp","moveDown","moveLeft","moveRight","$197cd56b15c33885$var$themeSwitch","getElementById","body","toggle","checked","querySelectorAll","p","color","$197cd56b15c33885$var$startX","$197cd56b15c33885$var$startY","$197cd56b15c33885$var$gameContainer","preventDefault","touch","touches","clientX","clientY","passive","changedTouches","diffX","diffY","abs"],"version":3,"file":"index.c6f0ce14.js.map"}